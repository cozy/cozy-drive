default_platform :ios

APP_NAME = "Cozy Drive"
APP_FILENAME = "Cozy Drive"
PLATFORM = { :ios => "platforms/ios", :android => "platforms/android" }
SECURITY = { :ios => "keys/ios", :android => "keys/android" }
BUILD = { :ios => "build/ios", :android => "build/android" }

def build(platform)
  sh "cordova build #{platform} --release"
end

platform :ios do
  # path to xcodeproj folder
  xcodeproj = "#{PLATFORM[:ios]}/#{APP_NAME}.xcodeproj"

  desc "Create an app identifier on the developer member center and iTunes Connect"
  lane :create do
    produce(app_name: APP_NAME)
  end

  desc "Codesign, Archive and upload the app to Testflight"
  lane :pushtest do
      #get certificates
      match(
        shallow_clone: true,
        clone_branch_directly: true,
        type: "appstore",
        git_url: "git@gitlab.cozycloud.cc:labs/mobile-certificates.git"
      )
      # Build the
      #build('ios')
      cordova(platform: 'ios', build_flag: ['-UseModernBuildSystem=0'])
      # Recreate schemes to ensure a smooth transition from cordova to gym
      recreate_schemes(project: xcodeproj)
      # Archive app into ipa
      gym(scheme: APP_NAME, project: xcodeproj, output_directory: "#{BUILD[:ios]}", output_name: APP_FILENAME)
       # Upload to Testflight
      pilot(distribute_external: false, ipa: "#{BUILD[:ios]}/#{APP_FILENAME}.ipa")
  end
end

platform :android do
  apk_path = "#{BUILD[:android]}/cozy-drive.apk"
  
  desc "Build, sign and upload APK to the Beta channel"
  lane :pushbeta do
    upload_to_play_store(
      track: 'beta', 
      apk: apk_path, 
      package_name: 'io.cozy.drive.mobile',
      json_key: 'keys/android/Google Play Android Developer-2d56b6aa13db.json'
    )
  end
end
